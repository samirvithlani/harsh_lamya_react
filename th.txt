html --> js

<div root>

</div>


root = documen.tge root ->

userName = document.createELement('h1')
userName.innerHtml = "ram"
root.appendChild(userName)

component: class based 
function based :16.x



DOM : document obj model:

dom full obejct update

dom : vdom:

changes -> vdom --> compare -> og dom :

state variable --> useState

json array : id name age :


generate: id ->1 to 1000
name random generate :""
age generate

Single page application : index.html  : cust -->

react-router-dom v 7.x
<BrowserRouter> app routing enable..
<Routes>
    <Route>
    <Route>
    <Route>
    <Route>
    <Route>
</routes>    

Compneny:
IPL --> Ipl.jsx -->

NAVABAR>JSX
app.js routes - route : 
image assets/images/...
ipl image 

teams : team laod : click -->id
teamDetail : fetch  : find..


PROPS:

component based arch:
1 -->2 data --->
PROPS : parent child comp -->
a ->b ->c
props drilling....
a-->b-->c

context : parent all child -->
a-->b -->c --->d

a ->globle object provider...
child component --> globle object data subscribe(use)



redux : state management

handlSUbmit = (submitHandlet)=>{

//data proce.. ...
var data= {
    name:"va....
}
cb(data)

}

{
    required:{
        value:true,message:"Name is required *"
        }
}
{
            required:{
                value:true,
                message:"Age is required *"
            }
        }

API :
application programming interface
fetch, axios

useEffect: to hanlde side effect in react js we use useEffect:
chat app :
x --> y message

component -> sideEf

update --->new comp ->old display -->form -->edit -->update
<Link>


